<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.optaplanner</groupId>
    <artifactId>optaplanner</artifactId>
    <version>7.0.0.Beta8</version>
  </parent>

  <artifactId>optaplanner-examples</artifactId>

  <name>OptaPlanner examples</name>
  <description>
    OptaPlanner solves planning problems.
    This lightweight, embeddable planning engine implements powerful and scalable algorithms
    to optimize business resource scheduling and planning.

    This module contains the non-web examples which demonstrate how to use it in a normal Java application.

    (This modified version of OptaPlanner examples are used to demonstrate profiling techniques)
  </description>
  <url>https://www.optaplanner.org</url>

  <repositories>
    <!-- TODO remove this once maven central replicates the jboss repository -->
    <!-- Included so the examples sources in the distribution zip build out-of-the-box with maven -->
    
    <repository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <jvm-options>-Xmx512m -Dlogback.level.org.optaplanner=debug</jvm-options>
    <enforcer.skip>true</enforcer.skip>
  </properties>
<!--  <properties>-->
<!--    <jvm-options>-Xmx512m -XX:+NeverActAsServerClassMachine -XX:CICompilerCount=1 -XX:-TieredCompilation -XX:-DoEscapeAnalysis -Dlogback.level.org.optaplanner=debug</jvm-options>-->
<!--    <enforcer.skip>true</enforcer.skip>-->
<!--  </properties>-->

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <forkCount>1</forkCount>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <configuration>
             <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>ui</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <!-- WARNING: This configuration must be run with "mvn exec:java" not "mvn exec:exec". -->
            <!-- It is impossible to write a configuration that is compatible with both exec:java and exec:exec -->
            <configuration>
              <mainClass>org.optaplanner.examples.app.OptaPlannerExamplesApp</mainClass>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>mrbench</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <!-- WARNING: This configuration must be run with "mvn exec:java" not "mvn exec:exec". -->
            <!-- It is impossible to write a configuration that is compatible with both exec:java and exec:exec -->
            <configuration>
              <mainClass>org.optaplanner.examples.machinereassignment.app.MachineReassignmentBenchmarkApp</mainClass>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>mrprofile</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <!-- WARNING: This configuration must be run with "mvn exec:java" not "mvn exec:exec". -->
            <!-- It is impossible to write a configuration that is compatible with both exec:java and exec:exec -->
            <configuration>
              <mainClass>org.optaplanner.examples.machinereassignment.app.MachineReassignmentBenchmarkAppContinous</mainClass>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>bench</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <excludes>
                <exclude>**Test.java</exclude>
              </excludes>
              <includes>
                <incude>**/MachineReassignmentSingle.java</incude>
              </includes>
              <argLine>${jvm-options}</argLine>              
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>profile</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <excludes>
                <exclude>**Test.java</exclude>
              </excludes>
              <includes>
                <incude>**/MachineReassignmentLoop.java</incude>
              </includes>
              <argLine>${jvm-options}</argLine>              
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>bench2</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <excludes>
                <exclude>**Test.java</exclude>
              </excludes>
              <includes>
                <incude>**/CheapTimeSingle.java</incude>
              </includes>
              <argLine>${jvm-options}</argLine>              
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>profile2</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <excludes>
                <exclude>**Test.java</exclude>
              </excludes>
              <includes>
                <incude>**/CheapTimeLoop.java</incude>
              </includes>
              <argLine>${jvm-options}</argLine>              
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>log4j2</id>
      <activation>
        <property>
          <name>log4j</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>logback</id>
      <activation>
        <property>
          <name>!log4j</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>

  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.25</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>2.11.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>2.11.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>2.11.1</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.2.3</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>1.2.3</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Internal dependencies -->
    <dependency>
      <groupId>org.optaplanner</groupId>
      <artifactId>optaplanner-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.optaplanner</groupId>
      <artifactId>optaplanner-persistence-common</artifactId>
    </dependency>
    <dependency><!-- Most examples use the XStream integration -->
      <groupId>org.optaplanner</groupId>
      <artifactId>optaplanner-persistence-xstream</artifactId>
    </dependency>
    <dependency><!-- Few examples use the JAXB integration -->
      <groupId>org.optaplanner</groupId>
      <artifactId>optaplanner-persistence-jaxb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.optaplanner</groupId>
      <artifactId>optaplanner-benchmark</artifactId>
    </dependency>
    <dependency>
      <groupId>org.optaplanner</groupId>
      <artifactId>optaplanner-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-decisiontables</artifactId>
    </dependency>
    <!-- External dependencies -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jfree</groupId>
      <artifactId>jfreechart</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jfree</groupId>
      <artifactId>jcommon</artifactId>
    </dependency>
    <!-- Common utils -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- XML -->
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
    </dependency>

    <!-- Examples only dependencies. -->
    <!--
      WARNING: every examples only dependency must be properly dealt with in
      optaplanner-distribution/src/main/assembly/assembly-optaplanner.xml
    -->
    <!-- Converters -->
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <exclusions>
        <exclusion>
          <!-- Collides with 'javax.xml.stream:stax-api' brought in by 'org.drools:drools-decisiontables'. -->
          <groupId>stax</groupId>
          <artifactId>stax-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

</project>
